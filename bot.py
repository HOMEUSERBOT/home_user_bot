from pyrogram import Client, filters, idle
from pyrogram.errors import FloodWait
from pyrogram.types import ChatPermissions, Message, InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup
from time import sleep, perf_counter
from pyrogram.handlers import MessageHandler
from covid import Covid
import time, random, datetime, asyncio, sys, wikipedia, requests, os

# –î–ª—è –ª–æ–≥–æ–≤ —É–±–µ—Ä–∏—Ç–µ –∑–Ω–∞–∫ "#"  –Ω–∏–∂–µ
import logging
 
app = Client("my_account")
 
# –ö–æ–º–∞–Ω–¥–∞ type
@app.on_message(filters.command("type", prefixes=".") & filters.me)
def type(_, msg):
    orig_text = msg.text.split(".type ", maxsplit=1)[1]
    text = orig_text
    tbp = "" # to be printed
    typing_symbol = "‚ñí"
 
    while(tbp != orig_text):
        try:
            msg.edit(tbp + typing_symbol)
            sleep(0.05) # 50 ms
 
            tbp = tbp + text[0]
            text = text[1:]
 
            msg.edit(tbp)
            sleep(0.05)
 
        except FloodWait as e:
            sleep(e.x)
 
# –ö–æ–º–∞–Ω–¥–∞ –≤–∑–ª–æ–º–∞ –ø–µ–Ω—Ç–∞–≥–æ–Ω–∞
@app.on_message(filters.command("hack", prefixes=".") & filters.me)
def hack(_, msg):
    perc = 0
 
    while(perc < 100):
        try:
            text = "üëÆ‚Äç –í–∑–ª–æ–º –ø–µ–Ω—Ç–∞–≥–æ–Ω–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ ..." + str(perc) + "%"
            msg.edit(text)
 
            perc += random.randint(1, 3)
            sleep(0.1)
 
        except FloodWait as e:
            sleep(e.x)
 
    msg.edit("üü¢ –ü–µ–Ω—Ç–∞–≥–æ–Ω —É—Å–ø–µ—à–Ω–æ –≤–∑–ª–æ–º–∞–Ω!")
    sleep(3)
 
    msg.edit("üëΩ –ü–æ–∏—Å–∫ —Å–µ–∫—Ä–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –æ–± –ù–õ–û ...")
    perc = 0
 
    while(perc < 100):
        try:
            text = "üëΩ –ü–æ–∏—Å–∫ —Å–µ–∫—Ä–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –æ–± –ù–õ–û ..." + str(perc) + "%"
            msg.edit(text)
 
            perc += random.randint(1, 5)
            sleep(0.15)
 
        except FloodWait as e:
            sleep(e.x)
 
    msg.edit("ü¶ñ –ù–∞–π–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–∏ –¥–∏–Ω–æ–∑–∞–≤—Ä–æ–≤ –Ω–∞ –∑–µ–º–ª–µ!")
 
@app.on_message(filters.command("thanos", prefixes=".") & filters.me)
def thanos(_, msg):
    chat = msg.text.split(".thanos ", maxsplit=1)[1]
 
    members = [
        x
        for x in app.iter_chat_members(chat)
        if x.status not in ("administrator", "creator")
    ]
 
    random.shuffle(members)
 
    app.send_message(chat, "–©–µ–ª—á–æ–∫ –¢–∞–Ω–æ—Å–∞ ... *—â—ë–ª–∫*")
 
    for i in range(len(members) // 2):
        try:
            app.restrict_chat_member(
                chat_id=chat,
                user_id=members[i].user.id,
                permissions=ChatPermissions(),
                until_date=int(time.time() + 86400),
            )
            app.send_message(chat, "–ò—Å—á–µ–∑ " + members[i].user.first_name)
        except FloodWait as e:
            print("> waiting", e.x, "seconds.")
            time.sleep(e.x)
 
    app.send_message(chat, "–ù–æ –∫–∞–∫–æ–π —Ü–µ–Ω–æ–π?")
  
# Covid
@app.on_message(filters.command("covid", prefixes=".") & filters.me)
async def covid_local(client: Client, message: Message):
    region = ' '.join(message.command[1:])
    await message.edit('<code>–ó–∞–≥—Ä—É–∑–∫–∞...</code>')
    covid = Covid(source="worldometers")
    try:
        local_status = covid.get_status_by_country_name(region)
        await message.edit("<b>=======ü¶† COVID-19 STATUS ü¶†=======</b>\n" +
                           f"<b>–†–µ–≥–∏–æ–Ω [–°—Ç—Ä–∞–Ω–∞]</b>: <code>{local_status['country']}</code>\n" +
                           "<b>====================================</b>\n" +
                           f"<b>ü§ß –ù–æ–≤—ã–µ –∑–∞—Ä–∞–∂–µ–Ω–∏—è</b>: <code>{local_status['new_cases']}</code>\n" +
                           f"<b>üò∑ –ù–æ–≤—ã–µ —Å–º–µ—Ä—Ç–∏</b>: <code>{local_status['new_deaths']}</code>\n" +
                           "<b>====================================</b>\n" +
                           f"<b>üò∑ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω–Ω—ã–µ</b>: <code>{local_status['confirmed']}</code>\n" +
                           f"<b>‚ùóÔ∏è –ê–∫—Ç–∏–≤–Ω—ã–µ [–ó–∞—Ä–∞–∂—ë–Ω–Ω—ã–µ]:</b> <code>{local_status['active']}</code>\n" +
                           f"<b>‚ö†Ô∏è –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏</b>: <code>{local_status['critical']}</code>\n" +
                           f"<b>üíÄ –°–º–µ—Ä—Ç–µ–π</b>: <code>{local_status['deaths']}</code>\n" +
                           f"<b>üöë –°–ø–∞—Å–µ–Ω–Ω–æ [–í—ã–ª–µ—á–µ–Ω–Ω–æ]</b>: <code>{local_status['recovered']}</code>\n")
    except ValueError:
        await message.edit(f'<code>There is no region called "{region}"</code>')
      
# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–æ –±–æ—Ç–∞
@app.on_message(filters.command("info" , prefixes=".") & filters.me)
def hack(_, msg):
    msg.edit("home userbot\nVersion 0.0.0.0\nCreator @klarlex")
                
app.run()
